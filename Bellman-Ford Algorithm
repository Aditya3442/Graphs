class Pair {
    int node;
    int distance;
    Pair(int node , int distance) {
        this.node = node;
        this.distance = distance;
    }
}
class Solution {
    public int[] bellmanFord(int V, int[][] edges, int src) {
        // code here
        int distance[] = new int[V];
        Arrays.fill(distance , 100000000);
        distance[src] = 0;
        for(int i = 1; i <= V - 1; i++) {
            for(int[] x : edges) {
                int u = x[0];
                int v = x[1];
                int w = x[2];
                
                if(distance[u] != 100000000 && distance[u] + w < distance[v]) {
                    distance[v] = distance[u] + w;
                }
            }
        }
        for(int[] i : edges) {
                int u = i[0];
                int v = i[1];
                int w = i[2];
                
                if(distance[u] != 100000000 && distance[u] + w < distance[v]) {
                    return new int[]{-1};
                }
        }
        return distance;
    }
}
