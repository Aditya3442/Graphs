class Solution {
    public int[] findOrder(int numCourses, int[][] prerequisites) {
        ArrayList<ArrayList<Integer>> list = new ArrayList<>();
        for(int i = 0; i < numCourses; i++) {
            list.add(new ArrayList<>());
        }
        for(int i = 0; i < prerequisites.length; i++) {
            list.get(prerequisites[i][1]).add(prerequisites[i][0]);
        }      
        int inDegree[] = new int[numCourses];
        for(int i = 0; i < numCourses; i++) {
            for(int x : list.get(i)) {
                inDegree[x]++;
            }
        }
        Queue<Integer> q = new LinkedList<>();
        for(int i = 0; i < inDegree.length; i++) {
            if(inDegree[i] == 0) 
               q.offer(i);
        }
        int ans[] = new int[numCourses];
        int k = 0;
        while(!q.isEmpty()) {
            int x = q.poll();
            ans[k++] = x;

            for(int index : list.get(x)) {
                inDegree[index]--;
                if(inDegree[index] == 0)
                   q.offer(index);
            }
        }
        if(k == numCourses)
             return ans;
        return new int[]{};
    }
}
